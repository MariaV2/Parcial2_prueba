# Generated by Selenium IDE
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestBoris2():
    def setup_method(self, method):
        self.driver = webdriver.Firefox()
        self.vars = {}
    
    def teardown_method(self, method):
        self.driver.quit()
    
    def test_boris2(self, username, email):
        self.driver.get("http://localhost/PHP-MYSQL-User-Login-System/")
        self.driver.set_window_size(1550, 830)
        
        # Asegurarse de que el elemento esté visible antes de hacer clic
        WebDriverWait(self.driver, 10).until(EC.element_to_be_clickable((By.CSS_SELECTOR, ".nav-item:nth-child(7) > .nav-link"))).click()
        
        # Esperar a que el campo 'username' esté visible y luego interactuar con él
        WebDriverWait(self.driver, 10).until(EC.visibility_of_element_located((By.NAME, "username"))).click()
        self.driver.find_element(By.NAME, "username").send_keys(username)
        
        WebDriverWait(self.driver, 10).until(EC.visibility_of_element_located((By.NAME, "email"))).click()
        self.driver.find_element(By.NAME, "email").send_keys(email)
        
        WebDriverWait(self.driver, 10).until(EC.visibility_of_element_located((By.NAME, "password"))).click()
        self.driver.find_element(By.NAME, "password").send_keys("123")
        
        WebDriverWait(self.driver, 10).until(EC.visibility_of_element_located((By.NAME, "cpass"))).click()
        self.driver.find_element(By.NAME, "cpass").send_keys("123")
        
        WebDriverWait(self.driver, 10).until(EC.element_to_be_clickable((By.ID, "submit"))).click()
        WebDriverWait(self.driver, 10).until(EC.element_to_be_clickable((By.CSS_SELECTOR, ".btn"))).click()
        
        WebDriverWait(self.driver, 10).until(EC.element_to_be_clickable((By.LINK_TEXT, "Signin Now"))).click()
        
        WebDriverWait(self.driver, 10).until(EC.visibility_of_element_located((By.NAME, "email"))).click()
        self.driver.find_element(By.NAME, "email").send_keys(email)
        
        WebDriverWait(self.driver, 10).until(EC.visibility_of_element_located((By.NAME, "password"))).click()
        self.driver.find_element(By.NAME, "password").send_keys("123")
        
        WebDriverWait(self.driver, 10).until(EC.element_to_be_clickable((By.ID, "submit"))).click()
        
        WebDriverWait(self.driver, 10).until(EC.element_to_be_clickable((By.ID, "dropdownMenuLink"))).click()
        WebDriverWait(self.driver, 10).until(EC.element_to_be_clickable((By.LINK_TEXT, "Logout"))).click()
        
        WebDriverWait(self.driver, 10).until(EC.element_to_be_clickable((By.LINK_TEXT, "Signup Now"))).click()

if __name__ == "__main__":
    with open("results.txt", "w", encoding="utf-8") as file:  # Especificar la codificación UTF-8
        for i in range(100):
            test = TestBoris2()
            username = f"user{i+1}"
            email = f"user{i+1}@example.com"
            try:
                test.setup_method(None)
                start_time = time.time()
                test.test_boris2(username, email)
                end_time = time.time()
                file.write(f"Execution {i+1}: Success - Time: {end_time - start_time} seconds\n")
            except Exception as e:
                file.write(f"Execution {i+1}: Failed - Error: {e}\n")
            finally:
                test.teardown_method(None)
